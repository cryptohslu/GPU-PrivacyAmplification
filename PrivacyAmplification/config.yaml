
#Privacy Amplification input size in the
#form 2^factor_exp where 27 is the maximum
#The result of 2^factor_exp is in bits
#Needs to match with the one specified in other components
factor_exp: 27

#FFT input maps binary 0, 1 to 0 and 1/(2^reduction_exp) which
#will be corrected during normalisation after IFFT
#This has an impact on the Privacy Amplification precision
reduction_exp: 11

#After the FFT before the element wise multiplication
#every element will be devided by 2^pre_mul_reduction_exp
#This has an impact on the Privacy Amplification precision
pre_mul_reduction_exp: 5

#Specifies which GPU to use by setting this value to the CUDA device ID.
#Which ID matches to which GPU can be seen using nvidia-smi (on Linux and Windows)
cuda_device_id_to_use: 1

#Specifies how large the input cache should be. If Privacy Amplification is slower
#then the data input this cache will fill up. Cache requires RAM.
#Its value must be 2 or larger while at 16 or higher is recommended.
input_blocks_to_cache: 16

#Specifies how large the ouput cache should be. If the data reciever is slower
#then the Privacy Amplification this cache will fill up. Cache requires RAM.
#Its value must be 2 or larger while at 16 or higher is recommended.
#Keep in mind that for verify_ampout_threads to work properly the output_blocks_to_cache
#has to be around double of what specified in output_blocks_to_cache
output_blocks_to_cache: 16

#Specifies if and how often the toeplitz matrix seed should be exchanged for every
#Privacy Amplification. This has a huge performance and security impact. Not changing  
#it will make the algorithms security to be no longer proven to be secure while
#changing it every time will reduce performance by around 33% (around 47% faster).
#0 = Always recalculate toeplitz matrix seed
#-1 = Never recalculate toeplitz matrix seed
#Note: This value gets overwritten by the key server and is heavily used during the
#algorithm that splits large blocks into chunks small enough to fit in GPU memory.
#I highly recommend to set this to 0 if security matters.
reuse_seed_amount: 0

#Displays the first n bytes of the final Privacy Amplification result
#to the console. n > 0 has a little performance impact.
#Set this to -1 to also disable displaying Blocktime and input throughput in Mbit/s
show_ampout: 0

#Displays ZeroMQ status messages which could have a major performance impact.
show_zeromq_status: false

#If enabled connects to the matrix seed server on address_seed_in to request the toeplitz
#matrix seed for the current block. If dynamic_toeplitz_matrix_seed is disabled and this 
#enabled only one block at the programm start will be requested. The matrix seed server
#ensures all parties envolved will recive the same seed for the same block.
#Warning: Currently the channel to the matrix seed server is not authenticated and has 
#to be implmented before any real world use. This is planned to be done.
#If disabled the matrix seed will be read from the path specified in toeplitz_seed_path
#however this only makes sense if dynamic_toeplitz_matrix_seed is disabled
#or for testcases as only one block worth of data will be ever read from that file and
#copied input_blocks_to_cache times to fill the input cache.
use_matrix_seed_server: true
address_seed_in: 'tcp://127.0.0.1:45555'
toeplitz_seed_path: 'toeplitz_seed.bin'

#If enabled connects to the key server on address_key_in to request the raw corrected key
#for the current block.
#Warning: The server has to be on the same computer as the key gets transmitted insecurely
#If disabled the key will be read from the path specified in keyfile_path however this
#only makes sense for testcases as only one block worth of data will be ever read from
#that file and copied input_blocks_to_cache to fill the input cache.
use_key_server: true
address_key_in: 'tcp://127.0.0.1:47777'
keyfile_path: 'keyfile.bin'

#If enabled connects to the ampout client on address_amp_out to send the Privacy
#Amplification result.
#
#If disabled no output will be sent anywhere which only makes sense for debugging
#if either verify_ampout, store_first_ampouts_in_file, show_ampout is enabled or
#the preprocessor definition SHOW_DEBUG_OUTPUT is set.
host_ampout_server: false
address_amp_out: 'tcp://127.0.0.1:48888'

#Stors the first n Privace amplification outputs to ampout.bin
#Set to 0 to disable this and to -1 to store all output to ampout.bin.
store_first_ampouts_in_file: 1

#If enabled verifies if the result of the Privacy Amplification of the provided
#keyfile.bin and toeplitz_seed.bin with a sample_size of 2^27 and a compression
#factor of vertical = sample_size / 4 + sample_size / 8 matches the SHA3-256
#hash of C422B6865C72CAD82CC26A1462B8A4566F911750F31B1475691269C1B7D4A716.
#This result was verified with a python reference implementation and ensures
#during debvelopment that corectness of this Privacy Amplification implementation.
#Disable this if you are using anything else than the provided testdata with above
#settings. A verificatiobn error will cause the programm to exit with error 101.
verify_ampout: true

#Specifies how meny threads for the ampout verification should be used. Around
#1.3 Gbit/s input throughput per thread with a sample_size of 2^27 and a
#compression factor of vertical = sample_size / 4 + sample_size / 8
#I recommend setting this value to 4 or higher to not bottleneck performance
verify_ampout_threads: 8
